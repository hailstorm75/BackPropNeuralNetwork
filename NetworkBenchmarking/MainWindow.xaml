<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NetworkBenchmarking"     
        x:Class="NetworkBenchmarking.MainWindow"     
        mc:Ignorable="d"
        Title="NN Benchmarker" Height="370" Width="525" MinHeight="370" MinWidth="525" Closing="Window_Closing">
  <Window.TaskbarItemInfo>
    <TaskbarItemInfo Description="NN Benchmarker" ProgressState="Normal" ProgressValue="{Binding ProgressTaskBar}"/>
  </Window.TaskbarItemInfo>
  <Grid x:Name="grid">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" MinWidth="200"/>
      <ColumnDefinition Width="5"/>
      <ColumnDefinition Width="*" MinWidth="200"/>
    </Grid.ColumnDefinitions>
    <DockPanel x:Name="dockPanel"  Grid.Column="0">
      <Grid DockPanel.Dock="Bottom" Margin="10, 10, 10, 10">
        <ProgressBar x:Name="prg_Progress" Height="20"  Value="{Binding Progress, Mode=OneWay}"/>
        <TextBlock Text="{Binding Value, ElementName=prg_Progress, StringFormat=\{0:0\}%}" 
           HorizontalAlignment="Center" 
           VerticalAlignment="Center" />
      </Grid>
      <Grid DockPanel.Dock="Top">
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="5"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <local:NeuralNetworkVisualizer Margin="10"/>
        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>
        <ScrollViewer Margin="10,10,10,0" Grid.Row="2" local:ScrollViewerExtensions.AlwaysScrollToEnd="True">
          <TextBox x:Name="textBox" TextWrapping="Wrap" Text="{Binding OutputLog}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        </ScrollViewer>
      </Grid>
    </DockPanel>
    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
    <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Disabled">
      <StackPanel>
        <!-- Iterations -->
        <DockPanel>
          <Label DockPanel.Dock="Left" Content="Max iterations:"/>
          <Label DockPanel.Dock="Right" Content="{Binding Value, ElementName=sld_iterations}"/>
        </DockPanel>
        <Slider x:Name="sld_iterations" Margin="10, 0, 10, 0" Minimum="5" Maximum="25" Value="{Binding InputIterations, Mode=TwoWay}" IsSnapToTickEnabled="True" TickFrequency="5"/>
        <!-- Network hidden -->
        <Label Content="Hidden layer definitions"/>
        <Grid Width="{Binding ActualWidth, ElementName=toggleButton, Mode=OneWay}">
          <DataGrid x:Name="dataGrid" HorizontalScrollBarVisibility="Disabled" Margin="10, 0, 10, 0" IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" SelectionUnit="FullRow" AutoGenerateColumns="False" ItemsSource="{Binding HiddenLayerDefinitions}" AlternatingRowBackground="#FFDEDEDE">
            <DataGrid.Columns>
              <DataGridTextColumn Width="*" Header="Layer Count" Binding="{Binding LayerCount}"/>
              <DataGridTextColumn Width="*" Header="Neuron Count" Binding="{Binding NeuronCount}"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
              <DataTemplate>
                <StackPanel>
                  <DockPanel>
                    <Button Content="Add" CommandParameter="8" Command="{Binding AddLayerCommand}" DockPanel.Dock="Left" Margin="5"/>
                    <TextBox DockPanel.Dock="Right" Margin="5"/>
                  </DockPanel>
                  <ListView ItemsSource="{Binding LayerDefinitions, Mode=TwoWay}">
                    <ListView.ItemTemplate>
                      <DataTemplate>
                        <DockPanel>
                          <Button Margin="10,0,0,0" IsEnabled="True" DockPanel.Dock="Left" Content="X" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path= DataContext.DeleteLayerCommand}" CommandParameter="{Binding}" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                          <StackPanel DockPanel.Dock="Left" Margin="10,0,0,0">
                            <Button Content="/\" FontSize="8"/>
                            <Button Content="\/" FontSize="8"/>
                          </StackPanel>
                          <Label Margin="10,0,0,0" DockPanel.Dock="Left" Content="Layer: "/>
                          <Label DockPanel.Dock="Right" Content="{Binding Neurons}"/>
                        </DockPanel>
                      </DataTemplate>
                    </ListView.ItemTemplate>
                  </ListView>
                </StackPanel>
              </DataTemplate>
            </DataGrid.RowDetailsTemplate>
          </DataGrid>
        </Grid>
        <!-- Dataset type -->
        <Label Content="Test data source"/>
        <TabControl IsSynchronizedWithCurrentItem="True" Margin="10, 0, 10, 0">
          <TabItem Header="Generated">
            <StackPanel>
              <!-- Network IO -->
              <Label Content="Network I/O count:"/>
              <Grid Margin="10, 0, 10, 5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="10" />
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="txt_inputs" Text="{Binding InputInputs, Mode=TwoWay}" TextAlignment="Center" Padding="2" Grid.Column="0"/>
                <TextBox x:Name="txt_outputs" Text="{Binding InputOutputs, Mode=TwoWay}" TextAlignment="Center" Padding="2" Grid.Column="2"/>
              </Grid>
              <Label Content="Generate test data with:"/>
              <ComboBox x:Name="cmb_DataType" Margin="10, 0, 10, 10" SelectedIndex="0" SelectedItem="{Binding OperationType}" ItemsSource="{Binding OperationTypes}"/>
            </StackPanel>
          </TabItem>
          <TabItem Header="Loaded"/>
        </TabControl>
        <DockPanel Margin="10, 5, 10, 10" >
          <Button DockPanel.Dock="Right" x:Name="btn_Cancel" Content="Cancel" Command="{Binding CancelOperationCommand}" IsEnabled="{Binding ButtonCancelEnabled, Mode=OneWay}" Margin="5,0,0,0"/>
          <Button DockPanel.Dock="Left" x:Name="btn_Start" Content="Start" Command="{Binding RunBenchmarkCommand, IsAsync=True}" IsEnabled="{Binding ButtonStartEnabled, Mode=OneWay}" Margin="0,0,5,0"/>
        </DockPanel>
      </StackPanel>
    </ScrollViewer>
  </Grid>
</Window>
